openapi: 3.0.0
info:
  title: Kafka HTTP API
  version: 3.0.0
servers:
- description: Kafka REST Proxy. See https://docs.confluent.io/current/kafka-rest/index.html.
  url: '{protocol}://{address}:{port}/v3'
  variables:
    address:
      default: localhost
      description: Address of the server
    port:
      default: "8082"
      description: Port of the server
    protocol:
      default: http
      description: Protocol for interacting with server
      enum:
      - http
      - https
- description: Kafka REST Proxy as part of Confluent Server.
  url: '{protocol}://{address}:{port}/kafka/v3'
  variables:
    protocol:
      default: http
      description: Protocol to communicate with the server
      enum:
      - http
      - https
    address:
      default: localhost
      description: Address of the server
    port:
      default: "8090"
      description: Port of the server
paths:
  /clusters:
    get:
      description: Returns a list of known Kafka clusters. Currently both Kafka and
        Kafka REST Proxy are only aware of the Kafka cluster pointed at by the ``bootstrap.servers``
        configuration. Therefore only one Kafka cluster will be returned in the response.
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaClusterList
                metadata:
                  self: http://localhost:9391/v3/clusters
                  next: null
                data:
                - kind: KafkaCluster
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1
                    resource_name: crn:///kafka=cluster-1
                  cluster_id: cluster-1
                  controller:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                  acls:
                    related: http://localhost:9391/v3/clusters/cluster-1/acls
                  brokers:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers
                  broker_configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/broker-configs
                  consumer_groups:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
                  topics:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics
                  partition_reassignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              schema:
                $ref: '#/components/schemas/ClusterDataList'
          description: The list of Kafka clusters.
      summary: List Clusters
      tags:
      - Cluster
  /clusters/{cluster_id}:
    get:
      description: Returns the Kafka cluster with the specified ``cluster_id``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaCluster
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1
                  resource_name: crn:///kafka=cluster-1
                cluster_id: cluster-1
                controller:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                acls:
                  related: http://localhost:9391/v3/clusters/cluster-1/acls
                brokers:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers
                broker_configs:
                  related: http://localhost:9391/v3/clusters/cluster-1/broker-configs
                consumer_groups:
                  related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
                topics:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics
                partition_reassignments:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              schema:
                $ref: '#/components/schemas/ClusterData'
          description: The Kafka cluster.
      summary: Get Cluster
      tags:
      - Cluster
  /clusters/{cluster_id}/acls:
    delete:
      description: Deletes the list of ACLs that matches the search criteria.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ACL resource type.
        explode: true
        in: query
        name: resource_type
        required: false
        schema:
          $ref: '#/components/schemas/AclResourceType'
        style: form
      - description: The ACL resource name.
        explode: true
        in: query
        name: resource_name
        required: false
        schema:
          type: string
        style: form
      - description: The ACL pattern type.
        explode: true
        in: query
        name: pattern_type
        required: false
        schema:
          $ref: '#/components/schemas/AclPatternType'
        style: form
      - description: The ACL principal.
        explode: true
        in: query
        name: principal
        required: false
        schema:
          type: string
        style: form
      - description: The ACL host.
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - description: The ACL operation.
        explode: true
        in: query
        name: operation
        required: false
        schema:
          $ref: '#/components/schemas/AclOperation'
        style: form
      - description: The ACL permission.
        explode: true
        in: query
        name: permission
        required: false
        schema:
          $ref: '#/components/schemas/AclPermission'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - kind: KafkaAcl
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=alice&host=*&operation=ALL&permission=ALLOW
                  cluster_id: cluster-1
                  resource_type: TOPIC
                  resource_name: topic-
                  pattern_type: PREFIXED
                  principal: alice
                  host: '*'
                  operation: ALL
                  permission: ALLOW
                - kind: KafkaAcl
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=cluster-1&pattern_type=LITERAL&principal=bob&host=*&operation=DESCRIBE&permission=DENY
                  cluster_id: cluster-1
                  resource_type: CLUSTER
                  resource_name: cluster-2
                  pattern_type: LITERAL
                  principal: alice
                  host: '*'
                  operation: DESCRIBE
                  permission: DENY
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: The list of deleted ACLs.
      summary: Delete ACLs
      tags:
      - ACL
    get:
      description: Returns a list of ACLs that match the search criteria.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ACL resource type.
        explode: true
        in: query
        name: resource_type
        required: false
        schema:
          $ref: '#/components/schemas/AclResourceType'
        style: form
      - description: The ACL resource name.
        explode: true
        in: query
        name: resource_name
        required: false
        schema:
          type: string
        style: form
      - description: The ACL pattern type.
        explode: true
        in: query
        name: pattern_type
        required: false
        schema:
          $ref: '#/components/schemas/AclPatternType'
        style: form
      - description: The ACL principal.
        explode: true
        in: query
        name: principal
        required: false
        schema:
          type: string
        style: form
      - description: The ACL host.
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - description: The ACL operation.
        explode: true
        in: query
        name: operation
        required: false
        schema:
          $ref: '#/components/schemas/AclOperation'
        style: form
      - description: The ACL permission.
        explode: true
        in: query
        name: permission
        required: false
        schema:
          $ref: '#/components/schemas/AclPermission'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaAclList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/acls?principal=alice
                data:
                - kind: KafkaAcl
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=alice&host=*&operation=ALL&permission=ALLOW
                  cluster_id: cluster-1
                  resource_type: TOPIC
                  resource_name: topic-
                  pattern_type: PREFIXED
                  principal: alice
                  host: '*'
                  operation: ALL
                  permission: ALLOW
                - kind: KafkaAcl
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=cluster-1&pattern_type=LITERAL&principal=bob&host=*&operation=DESCRIBE&permission=DENY
                  cluster_id: cluster-1
                  resource_type: CLUSTER
                  resource_name: cluster-2
                  pattern_type: LITERAL
                  principal: alice
                  host: '*'
                  operation: DESCRIBE
                  permission: DENY
              schema:
                $ref: '#/components/schemas/AclDataList'
          description: The list of ACLs.
      summary: Search ACLs
      tags:
      - ACL
    post:
      description: Creates an ACL.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateAclRequest'
      responses:
        "201":
          description: No Content
      summary: Create ACLs
      tags:
      - ACL
  /clusters/{cluster_id}/broker-configs:
    get:
      description: Returns a list of configuration parameters for the specified Kafka
        cluster.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaClusterConfigList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/broker-configs
                  next: null
                data:
                - kind: KafkaClusterConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/max.connections
                    resource_name: crn:///kafka=cluster-1/broker-config=max.connections
                  cluster_id: cluster-1
                  config_type: BROKER
                  name: max.connections
                  value: "1000"
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  synonyms:
                  - name: max.connections
                    value: "1000"
                    source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  - name: max.connections
                    value: "2147483647"
                    source: DEFAULT_CONFIG
                - kind: KafkaClusterConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/compression.type
                    resource_name: crn:///kafka=cluster-1/broker-config=compression.type
                  cluster_id: cluster-1
                  config_type: BROKER
                  name: compression.type
                  value: gzip
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/ClusterConfigDataList'
          description: The list of cluster configs.
      summary: List Cluster Configs
      tags:
      - Configs
  /clusters/{cluster_id}/broker-configs:alter:
    post:
      description: Updates or deletes a set of Kafka cluster configuration parameters.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AlterClusterConfigBatchRequest'
      responses:
        "204":
          description: No Content
      summary: Batch Alter Cluster Configs
      tags:
      - Configs
  /clusters/{cluster_id}/broker-configs/{name}:
    delete:
      description: Resets the configuration parameter specified by ``name`` to its
        default value.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Reset Cluster Config
      tags:
      - Configs
    get:
      description: Returns the configuration parameter specified by ``name``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaClusterConfig
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/compression.type
                  resource_name: crn:///kafka=cluster-1/broker-config=compression.type
                cluster_id: cluster-1
                config_type: BROKER
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
                synonyms:
                - name: compression.type
                  value: gzip
                  source: DYNAMIC_DEFAULT_BROKER_CONFIG
                - name: compression.type
                  value: producer
                  source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/ClusterConfigData'
          description: The cluster configuration parameter.
      summary: Get Cluster Config
      tags:
      - Configs
    put:
      description: Updates the configuration parameter specified by ``name``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateClusterConfigRequest'
      responses:
        "204":
          description: No Content
      summary: Update Cluster Config
      tags:
      - Configs
  /clusters/{cluster_id}/brokers:
    get:
      description: Return a list of brokers that belong to the specified Kafka cluster.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaBrokerList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/brokers
                  next: null
                data:
                - kind: KafkaBroker
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                    resource_name: crn:///kafka=cluster-1/broker=1
                  cluster_id: cluster-1
                  broker_id: 1
                  host: localhost
                  port: 9291
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
                  partition_replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
                - kind: KafkaBroker
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/brokers/2
                    resource_name: crn:///kafka=cluster-1/broker=2
                  cluster_id: cluster-1
                  broker_id: 2
                  host: localhost
                  port: 9292
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/2/configs
                  partition_replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/2/partition-replicas
                - kind: KafkaBroker
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/brokers/3
                    resource_name: crn:///kafka=cluster-1/broker=3
                  cluster_id: cluster-1
                  broker_id: 3
                  host: localhost
                  port: 9293
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/3/configs
                  partition_replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/3/partition-replicas
              schema:
                $ref: '#/components/schemas/BrokerDataList'
          description: The list of brokers.
      summary: List Brokers
      tags:
      - Broker
  /clusters/{cluster_id}/brokers/{broker_id}:
    get:
      description: Returns the broker specified by ``broker_id``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaBroker
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                  resource_name: crn:///kafka=cluster-1/broker=1
                cluster_id: cluster-1
                broker_id: 1
                host: localhost
                port: 9291
                configs:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
                partition_replicas:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
              schema:
                $ref: '#/components/schemas/BrokerData'
          description: The broker.
      summary: Get Broker
      tags:
      - Broker
  /clusters/{cluster_id}/brokers/{broker_id}/configs:
    get:
      description: Return the list of configuration parameters that belong to the
        specified Kafka broker.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaBrokerConfigList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
                  next: null
                data:
                - kind: KafkaBrokerConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/max.connections
                    resource_name: crn:///kafka=cluster-1/broker=1/config=max.connections
                  cluster_id: cluster-1
                  broker_id: 1
                  name: max.connections
                  value: "1000"
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_BROKER_CONFIG
                  synonyms:
                  - name: max.connections
                    value: "1000"
                    source: DYNAMIC_BROKER_CONFIG
                  - name: max.connections
                    value: "2147483647"
                    source: DEFAULT_CONFIG
                - kind: KafkaBrokerConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/compression.type
                    resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
                  cluster_id: cluster-1
                  broker_id: 1
                  name: compression.type
                  value: gzip
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_BROKER_CONFIG
                  synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_BROKER_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/BrokerConfigDataList'
          description: The list of broker configs.
      summary: List Broker Configs
      tags:
      - Configs
  /clusters/{cluster_id}/brokers/{broker_id}/configs:alter:
    post:
      description: Updates or deletes a set of broker configuration parameters.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AlterBrokerConfigBatchRequest'
      responses:
        "204":
          description: No Content
      summary: Batch Alter Broker Configs
      tags:
      - Configs
  /clusters/{cluster_id}/brokers/{broker_id}/configs/{name}:
    delete:
      description: Resets the configuration parameter specified by ``name`` to its
        default value.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Reset Broker Config
      tags:
      - Configs
    get:
      description: Return the configuration parameter specified by ``name``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaBrokerConfig
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/compression.type
                  resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
                cluster_id: cluster-1
                broker_id: 1
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_BROKER_CONFIG
                synonyms:
                - name: compression.type
                  value: gzip
                  source: DYNAMIC_BROKER_CONFIG
                - name: compression.type
                  value: producer
                  source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/BrokerConfigData'
          description: The broker configuration parameter.
      summary: Get Broker Config
      tags:
      - Configs
    put:
      description: Updates the configuration parameter specified by ``name``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateBrokerConfigRequest'
      responses:
        "204":
          description: No Content
      summary: Update Broker Config
      tags:
      - Configs
  /clusters/{cluster_id}/brokers/{broker_id}/partition-replicas:
    get:
      description: Returns the list of replicas assigned to the specified broker.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReplicaList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
                  next: null
                data:
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/1
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/replica=1
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 2
                  broker_id: 1
                  is_leader: true
                  is_in_sync: true
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/3/replicas/1
                    resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/replica=1
                  cluster_id: cluster-1
                  topic_name: topic-2
                  partition_id: 3
                  broker_id: 1
                  is_leader: false
                  is_in_sync: true
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/1/replicas/1
                    resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=1/replica=1
                  cluster_id: cluster-1
                  topic_name: topic-3
                  partition_id: 1
                  broker_id: 1
                  is_leader: false
                  is_in_sync: false
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
              schema:
                $ref: '#/components/schemas/ReplicaDataList'
          description: The list of replicas.
      summary: Search Replicas by Broker
      tags:
      - Broker
      - Replica
  /clusters/{cluster_id}/consumer-groups:
    get:
      description: Returns the list of consumer groups that belong to the specified
        Kafka cluster.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumerGroupList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
                  next: null
                data:
                - kind: KafkaConsumerGroup
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  is_simple: false
                  partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
                  state: STABLE
                  coordinator:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                  consumers:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
                - kind: KafkaConsumerGroup
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-2
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-2
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-2
                  is_simple: false
                  partition_assignor: org.apache.kafka.clients.consumer.StickyAssignor
                  state: PREPARING_REBALANCE
                  coordinator:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/2
                  consumers:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-2/consumers
                - kind: KafkaConsumerGroup
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-3
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-3
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-3
                  is_simple: false
                  partition_assignor: org.apache.kafka.clients.consumer.RangeAssignor
                  state: DEAD
                  coordinator:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/3
                  consumers:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-3/consumers
              schema:
                $ref: '#/components/schemas/ConsumerGroupDataList'
          description: The list of consumer groups.
      summary: List Consumer Groups
      tags:
      - Consumer Group
  /clusters/{cluster_id}/consumer-groups/{consumer_group_id}:
    get:
      description: Returns the consumer group specified by the ``consumer_group_id``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer group ID.
        example: consumer-group-1
        explode: false
        in: path
        name: consumer_group_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumerGroup
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                is_simple: false
                partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
                state: STABLE
                coordinator:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                consumers:
                  related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
              schema:
                $ref: '#/components/schemas/ConsumerGroupData'
          description: The consumer group.
      summary: Get Consumer Group
      tags:
      - Consumer Group
  /clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers:
    get:
      description: Returns a list of consumers that belong to the specified consumer
        group.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer group ID.
        example: consumer-group-1
        explode: false
        in: path
        name: consumer_group_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumerList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
                  next: null
                data:
                - kind: KafkaConsumer
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-1
                  instance_id: consumer-instance-1
                  client_id: client-1
                  assignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
                - kind: KafkaConsumer
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-2
                  instance_id: consumer-instance-2
                  client_id: client-2
                  assignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments
                - kind: KafkaConsumer
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-2
                  instance_id: consumer-instance-2
                  client_id: client-2
                  assignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments
              schema:
                $ref: '#/components/schemas/ConsumerDataList'
          description: The list of consumers.
      summary: List Consumers
      tags:
      - Consumer Group
  /clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers/{consumer_id}:
    get:
      description: Returns the consumer specified by the ``consumer_id``.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer group ID.
        example: consumer-group-1
        explode: false
        in: path
        name: consumer_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer ID.
        example: consumer-1
        explode: false
        in: path
        name: consumer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumer
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                instance_id: consumer-instance-1
                client_id: client-1
                assignments:
                  related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
              schema:
                $ref: '#/components/schemas/ConsumerData'
          description: The consumer.
      summary: Get Consumer
      tags:
      - Consumer Group
  /clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers/{consumer_id}/assignments:
    get:
      description: Returns a list of partition assignments for the specified consumer.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer group ID.
        example: consumer-group-1
        explode: false
        in: path
        name: consumer_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer ID.
        example: consumer-1
        explode: false
        in: path
        name: consumer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumerAssignmentList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
                  next: null
                data:
                - kind: KafkaConsumerAssignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-1
                  topic_name: topic-1
                  partition_id: 1
                  partition:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
                - kind: KafkaConsumerAssignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-2/partitions/2
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=2/partition=2
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-1
                  topic_name: topic-2
                  partition_id: 2
                  partition:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2
                - kind: KafkaConsumerAssignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-3/partitions/3
                    resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=3/partition=3
                  cluster_id: cluster-1
                  consumer_group_id: consumer-group-1
                  consumer_id: consumer-1
                  topic_name: topic-3
                  partition_id: 3
                  partition:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3
              schema:
                $ref: '#/components/schemas/ConsumerAssignmentDataList'
          description: The list of consumer group assignments.
      summary: List Consumer Assignments
      tags:
      - Consumer Group
  ? /clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers/{consumer_id}/assignments/{topic_name}/partitions/{partition_id}
  : get:
      description: Returns information about the assignment for the specified consumer
        to the specified partition.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer group ID.
        example: consumer-group-1
        explode: false
        in: path
        name: consumer_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer ID.
        example: consumer-1
        explode: false
        in: path
        name: consumer_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The partition ID.
        example: 1
        explode: false
        in: path
        name: partition_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaConsumerAssignment
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                topic_name: topic-1
                partition_id: 1
                partition:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
              schema:
                $ref: '#/components/schemas/ConsumerAssignmentData'
          description: The consumer group assignment.
      summary: Get Consumer Assignment
      tags:
      - Consumer Group
  /clusters/{cluster_id}/topics:
    get:
      description: Returns the list of topics that belong to the specified Kafka cluster.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaTopicList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics
                  next: null
                data:
                - kind: KafkaTopic
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1
                    resource_name: crn:///kafka=cluster-1/topic=topic-1
                  cluster_id: cluster-1
                  topic_name: topic-1
                  is_internal: false
                  replication_factor: 3
                  partitions:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
                  partition_reassignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments
                - kind: KafkaTopic
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2
                    resource_name: crn:///kafka=cluster-1/topic=topic-2
                  cluster_id: cluster-1
                  topic_name: topic-2
                  is_internal: true
                  replication_factor: 4
                  partitions:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/configs
                  partition_reassignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/-/reassignments
                - kind: KafkaTopic
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3
                    resource_name: crn:///kafka=cluster-1/topic=topic-3
                  cluster_id: cluster-1
                  topic_name: topic-3
                  is_internal: false
                  replication_factor: 5
                  partitions:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions
                  configs:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/configs
                  partition_reassignments:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/-/reassignments
              schema:
                $ref: '#/components/schemas/TopicDataList'
          description: The list of topics.
      summary: List Topics
      tags:
      - Topic
    post:
      description: Creates a topic.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateTopicRequest'
      responses:
        "201":
          content:
            application/json:
              example:
                kind: KafkaTopic
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X
                  resource_name: crn:///kafka=cluster-1/topic=topic-X
                cluster_id: cluster-1
                topic_name: topic-X
                is_internal: false
                replication_factor: 3
                partitions:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/partitions
                configs:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/configs
                partition_reassignments:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/partitions/-/reassignments
              schema:
                $ref: '#/components/schemas/TopicData'
          description: The created topic.
      summary: Create Topic
      tags:
      - Topic
  /clusters/{cluster_id}/topics/{topic_name}:
    delete:
      description: Deletes the topic with the given `topic_name`.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Topic
      tags:
      - Topic
    get:
      description: Returns the topic with the given `topic_name`.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaTopic
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1
                cluster_id: cluster-1
                topic_name: topic-1
                is_internal: false
                replication_factor: 3
                partitions:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
                configs:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
                partition_reassignments:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments
              schema:
                $ref: '#/components/schemas/TopicData'
          description: The topic.
      summary: Get Topic
      tags:
      - Topic
  /clusters/{cluster_id}/topics/{topic_name}/configs:
    get:
      description: Return the list of configs that belong to the specified topic.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaTopicConfigList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
                  next: null
                data:
                - kind: KafkaTopicConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs/cleanup.policy
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/config=cleanup.policy
                  cluster_id: cluster-1
                  topic_name: topic-1
                  name: cleanup.policy
                  value: compact
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_TOPIC_CONFIG
                  synonyms:
                  - name: cleanup.policy
                    value: compact
                    source: DYNAMIC_TOPIC_CONFIG
                  - name: cleanup.policy
                    value: delete
                    source: DEFAULT_CONFIG
                - kind: KafkaTopicConfig
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs/compression.type
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
                  cluster_id: cluster-1
                  topic_name: topic-1
                  name: compression.type
                  value: gzip
                  is_default: false
                  is_read_only: false
                  is_sensitive: false
                  source: DYNAMIC_TOPIC_CONFIG
                  synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_TOPIC_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/TopicConfigDataList'
          description: The list of cluster configs.
      summary: List Topic Configs
      tags:
      - Configs
  /clusters/{cluster_id}/topics/{topic_name}/configs:alter:
    post:
      description: Updates or deletes a set of topic configs.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AlterTopicConfigBatchRequest'
      responses:
        "204":
          description: No Content
      summary: Batch Alter Topic Configs
      tags:
      - Configs
  /clusters/{cluster_id}/topics/{topic_name}/configs/{name}:
    delete:
      description: Resets the config with given `name` to its default value.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Reset Topic Config
      tags:
      - Configs
    get:
      description: Return the config with the given `name`.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaTopicConfig
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/compression.type
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
                cluster_id: cluster-1
                topic_name: topic-1
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_TOPIC_CONFIG
                synonyms:
                - name: compression.type
                  value: gzip
                  source: DYNAMIC_TOPIC_CONFIG
                - name: compression.type
                  value: producer
                  source: DEFAULT_CONFIG
              schema:
                $ref: '#/components/schemas/TopicConfigData'
          description: The topic configuration parameter.
      summary: Get Topic Config
      tags:
      - Configs
    put:
      description: Updates the config with given `name`.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The configuration parameter name.
        example: compression.type
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateTopicConfigRequest'
      responses:
        "204":
          description: No Content
      summary: Update Topic Config
      tags:
      - Configs
  /clusters/{cluster_id}/topics/{topic_name}/partitions:
    get:
      description: Returns the list of partitions that belong to the specified topic.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPartitionList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
                  next: null
                data:
                - kind: KafkaPartition
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  leader:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                  reassignment:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                - kind: KafkaPartition
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 2
                  leader:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/2
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
                  reassignment:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
                - kind: KafkaPartition
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 3
                  leader:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas/3
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas
                  reassignment:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment
              schema:
                $ref: '#/components/schemas/PartitionDataList'
          description: The list of partitions.
      summary: List Partitions
      tags:
      - Partition
  /clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}:
    get:
      description: Returns the partition with the given `partition_id`.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The partition ID.
        example: 1
        explode: false
        in: path
        name: partition_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPartition
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                leader:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                replicas:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                reassignment:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
              schema:
                $ref: '#/components/schemas/PartitionData'
          description: The partition
      summary: Get Partition
      tags:
      - Partition
  /clusters/{cluster_id}/topics/-/partitions/-/reassignment:
    get:
      description: Returns the list of all ongoing replica reassignments in the given
        Kafka cluster.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReassignmentList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
                  next: null
                data:
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  adding_replicas:
                  - 1
                  - 2
                  removing_replicas:
                  - 3
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-2/partition=2/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-2
                  partition_id: 2
                  adding_replicas:
                  - 1
                  removing_replicas:
                  - 2
                  - 3
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2/replicas
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-3
                  partition_id: 3
                  adding_replicas:
                  - 3
                  removing_replicas:
                  - 1
                  - 2
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3/replicas
              schema:
                $ref: '#/components/schemas/ReassignmentDataList'
          description: The ongoing replicas reassignments.
      summary: List All Replica Reassignments
      tags:
      - Partition
  /clusters/{cluster_id}/topics/{topic_name}/partitions/-/reassignment:
    get:
      description: Returns the list of ongoing replica reassignments for the given
        topic.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReassignmentList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
                  next: null
                data:
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  adding_replicas:
                  - 1
                  - 2
                  removing_replicas:
                  - 3
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 2
                  adding_replicas:
                  - 1
                  removing_replicas:
                  - 2
                  - 3
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
                - kind: KafkaReassignment
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3/reassignment
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 3
                  adding_replicas:
                  - 3
                  removing_replicas:
                  - 1
                  - 2
                  replicas:
                    related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas
              schema:
                $ref: '#/components/schemas/ReassignmentDataList'
          description: The ongoing replicas reassignments.
      summary: Search Replica Reassignments By Topic
      tags:
      - Partition
  /clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}/reassignment:
    get:
      description: Returns the list of ongoing replica reassignments for the given
        partition.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The partition ID.
        example: 1
        explode: false
        in: path
        name: partition_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReassignment
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                adding_replicas:
                - 1
                - 2
                removing_replicas:
                - 3
                replicas:
                  related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              schema:
                $ref: '#/components/schemas/ReassignmentData'
          description: The ongoing replicas reassignments.
      summary: Get Replica Reassignments
      tags:
      - Partition
  /clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}/replicas:
    get:
      description: Returns the list of replicas for the specified partition.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The partition ID.
        example: 1
        explode: false
        in: path
        name: partition_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReplicaList
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                  next: null
                data:
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  broker_id: 1
                  is_leader: true
                  is_in_sync: true
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/2
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=2
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  broker_id: 2
                  is_leader: false
                  is_in_sync: true
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/2
                - kind: KafkaReplica
                  metadata:
                    self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/3
                    resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=3
                  cluster_id: cluster-1
                  topic_name: topic-1
                  partition_id: 1
                  broker_id: 3
                  is_leader: false
                  is_in_sync: false
                  broker:
                    related: http://localhost:9391/v3/clusters/cluster-1/brokers/3
              schema:
                $ref: '#/components/schemas/ReplicaDataList'
          description: The list of replicas.
      summary: List Replicas
      tags:
      - Replica
  /clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}/replicas/{broker_id}:
    get:
      description: Returns the replica for the specified partition assigned to the
        specified broker.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The topic name.
        example: topic-1
        explode: false
        in: path
        name: topic_name
        required: true
        schema:
          type: string
        style: simple
      - description: The partition ID.
        example: 1
        explode: false
        in: path
        name: partition_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The broker ID.
        example: 1
        explode: false
        in: path
        name: broker_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaReplica
                metadata:
                  self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                broker_id: 1
                is_leader: true
                is_in_sync: true
                broker:
                  related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
              schema:
                $ref: '#/components/schemas/ReplicaData'
          description: The replica.
      summary: Get Replica
      tags:
      - Replica
  /clusters/{cluster_id}/links:
    get:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaLinkDataList
                metadata:
                  self: http://localhost:63699/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links
                  next: null
                data:
                - kind: KafkaLinkData
                  metadata:
                    self: http://localhost:58441/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-1
                    resource_name: null
                  cluster_id: src-cluster-id
                  link_name: my-new-link-1
                  link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                  topics:
                  - topic-sb-1
                  - topic-sb-2
                - kind: KafkaLinkData
                  metadata:
                    self: http://localhost:58441/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-2
                    resource_name: null
                  cluster_id: src-cluster-id
                  link_name: my-new-link-2
                  link_id: abced-f7d8-4844-a577-abcdefghijklmnp
                  topics:
                  - topic-db-1
                  - topic-db-2
              schema:
                $ref: '#/components/schemas/ListLinksResponseDataList'
          description: A list of link names and properties
      summary: List all cluster links in the given cluster
      tags:
      - ClusterLinking
    post:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: true
        in: query
        name: link_name
        required: true
        schema:
          type: string
        style: form
      - description: 'To validate if the link can be created or not, but not to create
          it. Default: false'
        example: false
        explode: true
        in: query
        name: validate_only
        required: false
        schema:
          type: boolean
        style: form
      - description: 'To synchronously validate that the source cluster ID is expected
          and the dest cluster has the permission to read topics in the source cluster.
          default: true'
        example: false
        explode: true
        in: query
        name: validate_link
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/CreateLinkRequest'
      responses:
        "204":
          content:
            application/json: {}
          description: Operation succeeded, no content in the response
      summary: Create a cluster link
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}:
    delete:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Operation succeeded, no content in the response
      summary: Delete the cluster link
      tags:
      - ClusterLinking
    get:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaLinkData
                metadata:
                  self: http://localhost:63699/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/my-new-link-1
                  resource_name: null
                cluster_id: src-cluster-id
                link_name: my-new-link-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                topics:
                - topic-db-1
                - topic-db-2
              schema:
                $ref: '#/components/schemas/ListLinksResponseData'
          description: Single link name and properties
      summary: Describe the cluster link
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/configs:
    get:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaLinkData
                metadata:
                  self: http://localhost:56450/v3/clusters/v-0Ce-CkTyKQol9v46LaCQ/links/link-nb-1/configs
                  next: null
                data:
                - kind: KafkaLinkConfigData
                  metadata:
                    self: http://localhost:56608/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                    resource_name: null
                  name: consumer.offset.sync.ms
                  value: "3825940"
                  default: false
                  read_only: false
                  sensitive: false
                  source: DYNAMIC_CLUSTER_LINK_CONFIG
                  synonyms:
                  - null
                  link_name: link-db-1
                  link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                - kind: KafkaLinkConfigData
                  metadata:
                    self: http://localhost:56608/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                    resource_name: null
                  name: acl.sync.ms
                  value: "5000"
                  default: false
                  read_only: false
                  sensitive: false
                  source: DYNAMIC_CLUSTER_LINK_CONFIG
                  synonyms:
                  - null
                  link_name: link-db-1
                  link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
              schema:
                $ref: '#/components/schemas/ListLinkConfigsResponseDataList'
          description: Config name and value
      summary: List all configs of the cluster link
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/configs/{config_name}:
    delete:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: The link config name
        example: consumer.offset.sync.enable
        explode: false
        in: path
        name: config_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json: {}
          description: Operation succeeded, no content in the response
      summary: Reset the config under the cluster link
      tags:
      - ClusterLinking
    get:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: The link config name
        example: consumer.offset.sync.enable
        explode: false
        in: path
        name: config_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaLinkConfigData
                metadata:
                  self: http://localhost:56608/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                  resource_name: null
                name: consumer.offset.sync.ms
                value: "3825940"
                default: false
                read_only: false
                sensitive: false
                source: DYNAMIC_CLUSTER_LINK_CONFIG
                synonyms:
                - null
                link_name: link-db-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                topics:
                - topic-db-1
                - topic-db-2
              schema:
                $ref: '#/components/schemas/ListLinkConfigsResponseData'
          description: Config name and value
      summary: Describe the config under the cluster link
      tags:
      - ClusterLinking
    put:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: The link config name
        example: consumer.offset.sync.enable
        explode: false
        in: path
        name: config_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateLinkConfigRequest'
      responses:
        "204":
          content:
            application/json: {}
          description: Operation succeeded, no content in the response
      summary: Alter the config under the cluster link
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/configs:alter:
    put:
      description: Batch update configs of the cluster link.
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AlterLinkConfigBatchRequest'
      responses:
        "204":
          description: No Content
      summary: Batch Alter Link Configs
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors:
    get:
      description: List all mirror topics under the link
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: The status of the mirror topic. If not specified, all mirror
          topics will be returned.
        example: ACTIVE
        explode: true
        in: query
        name: mirror_status
        required: false
        schema:
          $ref: '#/components/schemas/MirrorTopicStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaMirrorDataList
                metadata:
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors
                  resource_name: crn:///kafka=cluster-1
                  next: null
                data:
                - kind: KafkaMirrorData
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors/topic-1
                  resource_name: crn:///kafka=cluster-1
                  destination_topic_name: topic-1
                  source_topic_name: topic-1
                  mirror_topic_status: ACTIVE
                  state_time_ms: "1612550939300"
                - kind: KafkaMirrorData
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors/topic-2
                  resource_name: crn:///kafka=cluster-1
                  destination_topic_name: topic-2
                  source_topic_name: topic-2
                  mirror_topic_status: STOPPED
                  state_time_ms: "1612551353640"
              schema:
                $ref: '#/components/schemas/ListMirrorTopicsResponseDataList'
          description: Metadata of mirror topics
      summary: List mirror topics
      tags:
      - ClusterLinking
    post:
      description: Create a topic in the destination cluster mirroring a topic in
        the source cluster
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateMirrorTopicRequest'
      responses:
        "204":
          content:
            application/json: {}
          description: Operation succeeded, no content in the response
      summary: Create a mirror topic
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors/{destination_topic_name}:
    get:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: Cluster Linking destination topic name
        example: topic-1
        explode: false
        in: path
        name: destination_topic_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaMirrorData
                self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors/topic-1
                resource_name: crn:///kafka=cluster-1
                destination_topic_name: topic-1
                source_topic_name: topic-1
                mirror_topic_status: ACTIVE
                state_time_ms: "1612550939300"
              schema:
                $ref: '#/components/schemas/ListMirrorTopicsResponseData'
          description: Metadata of the mirror topic
      summary: Describe the mirror topic
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors/promote:
    post:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: 'Is validate-only or not. default: false'
        example: false
        explode: true
        in: query
        name: validate_only
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AlterMirrorsRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPromoteMirror
                metadata:
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/links/link-1/mirrors
                  resource_name: crn:///kafka=cluster-1
                data:
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-sb
                  errorCode: null
                  errorMessage: null
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-2
                  errorCode: 400
                  errorMessage: Topic 'topic-2' has already stopped its mirror from
                    'my-new-link-1'
              schema:
                $ref: '#/components/schemas/AlterMirrorStatusResponseDataList'
          description: Mirror status alternation result
      summary: Promote the mirror topics
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors/failover:
    post:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: 'Is validate-only or not. default: false'
        example: false
        explode: true
        in: query
        name: validate_only
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AlterMirrorsRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPromoteMirror
                metadata:
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/links/link-1/mirrors
                  resource_name: crn:///kafka=cluster-1
                data:
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-sb
                  errorCode: null
                  errorMessage: null
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-2
                  errorCode: 400
                  errorMessage: Topic 'topic-2' has already stopped its mirror from
                    'my-new-link-1'
              schema:
                $ref: '#/components/schemas/AlterMirrorStatusResponseDataList'
          description: Mirror status alternation result
      summary: Failover the mirror topics
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors/pause:
    post:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: 'Is validate-only or not. default: false'
        example: false
        explode: true
        in: query
        name: validate_only
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AlterMirrorsRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPromoteMirror
                metadata:
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/links/link-1/mirrors
                  resource_name: crn:///kafka=cluster-1
                data:
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-sb
                  errorCode: null
                  errorMessage: null
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-2
                  errorCode: 400
                  errorMessage: Topic 'topic-2' has already stopped its mirror from
                    'my-new-link-1'
              schema:
                $ref: '#/components/schemas/AlterMirrorStatusResponseDataList'
          description: Mirror status alternation result
      summary: Pause the mirror topics
      tags:
      - ClusterLinking
  /clusters/{cluster_id}/links/{link_name}/mirrors/resume:
    post:
      parameters:
      - description: The Kafka cluster ID.
        example: cluster-1
        explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      - description: The link name
        example: link-sb1
        explode: false
        in: path
        name: link_name
        required: true
        schema:
          type: string
        style: simple
      - description: 'Is validate-only or not. default: false'
        example: false
        explode: true
        in: query
        name: validate_only
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AlterMirrorsRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                kind: KafkaPromoteMirror
                metadata:
                  self: http://localhost:9391/kafka/v3/clusters/cluster-1/links/link-1/mirrors
                  resource_name: crn:///kafka=cluster-1
                data:
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-sb
                  errorCode: null
                  errorMessage: null
                - kind: AlterMirrorsData
                  metadata:
                    self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                    resource: crn:///kafka=cluster-1
                  destinationTopicName: topic-2
                  errorCode: 400
                  errorMessage: Topic 'topic-2' has already stopped its mirror from
                    'my-new-link-1'
              schema:
                $ref: '#/components/schemas/AlterMirrorStatusResponseDataList'
          description: Mirror status alternation result
      summary: Resume the mirror topics
      tags:
      - ClusterLinking
components:
  parameters:
    AclHost:
      description: The ACL host.
      explode: true
      in: query
      name: host
      required: false
      schema:
        type: string
      style: form
    AclOperation:
      description: The ACL operation.
      explode: true
      in: query
      name: operation
      required: false
      schema:
        $ref: '#/components/schemas/AclOperation'
      style: form
    AclPatternType:
      description: The ACL pattern type.
      explode: true
      in: query
      name: pattern_type
      required: false
      schema:
        $ref: '#/components/schemas/AclPatternType'
      style: form
    AclPermission:
      description: The ACL permission.
      explode: true
      in: query
      name: permission
      required: false
      schema:
        $ref: '#/components/schemas/AclPermission'
      style: form
    AclPrincipal:
      description: The ACL principal.
      explode: true
      in: query
      name: principal
      required: false
      schema:
        type: string
      style: form
    AclResourceName:
      description: The ACL resource name.
      explode: true
      in: query
      name: resource_name
      required: false
      schema:
        type: string
      style: form
    AclResourceType:
      description: The ACL resource type.
      explode: true
      in: query
      name: resource_type
      required: false
      schema:
        $ref: '#/components/schemas/AclResourceType'
      style: form
    BrokerId:
      description: The broker ID.
      example: 1
      explode: false
      in: path
      name: broker_id
      required: true
      schema:
        type: integer
      style: simple
    ClusterId:
      description: The Kafka cluster ID.
      example: cluster-1
      explode: false
      in: path
      name: cluster_id
      required: true
      schema:
        type: string
      style: simple
    ConfigName:
      description: The configuration parameter name.
      example: compression.type
      explode: false
      in: path
      name: name
      required: true
      schema:
        type: string
      style: simple
    ConsumerGroupId:
      description: The consumer group ID.
      example: consumer-group-1
      explode: false
      in: path
      name: consumer_group_id
      required: true
      schema:
        type: string
      style: simple
    ConsumerId:
      description: The consumer ID.
      example: consumer-1
      explode: false
      in: path
      name: consumer_id
      required: true
      schema:
        type: string
      style: simple
    PartitionId:
      description: The partition ID.
      example: 1
      explode: false
      in: path
      name: partition_id
      required: true
      schema:
        type: integer
      style: simple
    TopicName:
      description: The topic name.
      example: topic-1
      explode: false
      in: path
      name: topic_name
      required: true
      schema:
        type: string
      style: simple
    ValidateOnly:
      description: 'To validate if the link can be created or not, but not to create
        it. Default: false'
      example: false
      explode: true
      in: query
      name: validate_only
      required: false
      schema:
        type: boolean
      style: form
    ValidateLink:
      description: 'To validate the dest cluster ID is expected and topics are readable.
        default: true'
      example: false
      explode: true
      in: query
      name: validate_link
      required: false
      schema:
        type: boolean
      style: form
    LinkName:
      description: The link name
      example: link-sb1
      explode: false
      in: path
      name: link_name
      required: true
      schema:
        type: string
      style: simple
    LinkNameQuery:
      description: The link name
      example: link-sb1
      explode: true
      in: query
      name: link_name
      required: true
      schema:
        type: string
      style: form
    LinkConfigName:
      description: The link config name
      example: consumer.offset.sync.enable
      explode: false
      in: path
      name: config_name
      required: true
      schema:
        type: string
      style: simple
    MirrorTopicStatus:
      description: The status of the mirror topic. If not specified, all mirror topics
        will be returned.
      example: active
      explode: true
      in: query
      name: mirror_status
      required: false
      schema:
        $ref: '#/components/schemas/MirrorTopicStatus'
      style: form
    DestinationTopicName:
      description: Cluster Linking destination topic name
      example: topic-1
      explode: false
      in: path
      name: destination_topic_name
      required: true
      schema:
        type: string
      style: simple
  requestBodies:
    AlterBrokerConfigBatchRequest:
      content:
        application/json:
          example:
            data:
            - name: max.connections
              operation: DELETE
            - name: compression.type
              value: gzip
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
      description: The alter broker configuration parameter batch request.
    AlterClusterConfigBatchRequest:
      content:
        application/json:
          example:
            data:
            - name: max.connections
              operation: DELETE
            - name: compression.type
              value: gzip
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
      description: The alter cluster configuration parameter batch request.
    AlterTopicConfigBatchRequest:
      content:
        application/json:
          example:
            data:
            - name: cleanup.policy
              operation: DELETE
            - name: compression.type
              value: gzip
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
      description: The alter topic configuration parameter batch request.
    CreateAclRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAclRequestData'
      description: The ACL creation request.
    CreateTopicRequest:
      content:
        application/json:
          example:
            topic_name: topic-X
            partitions_count: 64
            replication_factor: 3
            configs:
            - name: cleanup.policy
              value: compact
            - name: compression.type
              value: gzip
          schema:
            $ref: '#/components/schemas/CreateTopicRequestData'
      description: The topic creation request.
    UpdateBrokerConfigRequest:
      content:
        application/json:
          example:
            value: gzip
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
      description: The broker configuration parameter update request.
    UpdateClusterConfigRequest:
      content:
        application/json:
          example:
            value: gzip
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
      description: The cluster configuration parameter update request.
    UpdateTopicConfigRequest:
      content:
        application/json:
          example:
            value: gzip
          schema:
            $ref: '#/components/schemas/UpdateConfigRequestData'
      description: The topic configuration parameter update request.
    CreateLinkRequest:
      content:
        application/json:
          example:
            source_cluster_id: cluster-1
            configs:
            - name: acl.sync.enable
              value: "false"
            - name: consumer.offset.sync.ms
              value: "30000"
          schema:
            $ref: '#/components/schemas/CreateLinkRequestData'
      description: Create a cluster link
    UpdateLinkConfigRequest:
      content:
        application/json:
          example:
            value: "300000"
          schema:
            $ref: '#/components/schemas/UpdateLinkConfigRequestData'
      description: New cluster link config value
    AlterLinkConfigBatchRequest:
      content:
        application/json:
          example:
            data:
            - name: consumer.offset.sync.ms
              operation: DELETE
            - name: cluster.link.retry.timeout.ms
              value: 285714
          schema:
            $ref: '#/components/schemas/AlterConfigBatchRequestData'
    CreateMirrorTopicRequest:
      content:
        application/json:
          example:
            source_topic_name: topic-1
            configs:
            - name: unclean.leader.election.enable
              value: "true"
            replication_factor: 1
          schema:
            $ref: '#/components/schemas/CreateMirrorTopicRequestData'
      description: Name and configs of the topics mirroring from and mirroring to
    AlterMirrorsRequest:
      content:
        application/json:
          example:
            destination_topic_names:
            - topic-1
            - topic-2
            - topic-3
          schema:
            $ref: '#/components/schemas/AlterMirrorsRequestData'
      description: Name of the topics to apply the changes
  responses:
    CreateTopicResponse:
      content:
        application/json:
          example:
            kind: KafkaTopic
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X
              resource_name: crn:///kafka=cluster-1/topic=topic-X
            cluster_id: cluster-1
            topic_name: topic-X
            is_internal: false
            replication_factor: 3
            partitions:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/partitions
            configs:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/configs
            partition_reassignments:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-X/partitions/-/reassignments
          schema:
            $ref: '#/components/schemas/TopicData'
      description: The created topic.
    DeleteAclsResponse:
      content:
        application/json:
          example:
            data:
            - kind: KafkaAcl
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=alice&host=*&operation=ALL&permission=ALLOW
              cluster_id: cluster-1
              resource_type: TOPIC
              resource_name: topic-
              pattern_type: PREFIXED
              principal: alice
              host: '*'
              operation: ALL
              permission: ALLOW
            - kind: KafkaAcl
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=cluster-1&pattern_type=LITERAL&principal=bob&host=*&operation=DESCRIBE&permission=DENY
              cluster_id: cluster-1
              resource_type: CLUSTER
              resource_name: cluster-2
              pattern_type: LITERAL
              principal: alice
              host: '*'
              operation: DESCRIBE
              permission: DENY
          schema:
            $ref: '#/components/schemas/inline_response_200'
      description: The list of deleted ACLs.
    GetBrokerConfigResponse:
      content:
        application/json:
          example:
            kind: KafkaBrokerConfig
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/compression.type
              resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
            cluster_id: cluster-1
            broker_id: 1
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_BROKER_CONFIG
            synonyms:
            - name: compression.type
              value: gzip
              source: DYNAMIC_BROKER_CONFIG
            - name: compression.type
              value: producer
              source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/BrokerConfigData'
      description: The broker configuration parameter.
    GetBrokerResponse:
      content:
        application/json:
          example:
            kind: KafkaBroker
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/brokers/1
              resource_name: crn:///kafka=cluster-1/broker=1
            cluster_id: cluster-1
            broker_id: 1
            host: localhost
            port: 9291
            configs:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
            partition_replicas:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
          schema:
            $ref: '#/components/schemas/BrokerData'
      description: The broker.
    GetClusterConfigResponse:
      content:
        application/json:
          example:
            kind: KafkaClusterConfig
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/compression.type
              resource_name: crn:///kafka=cluster-1/broker-config=compression.type
            cluster_id: cluster-1
            config_type: BROKER
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_DEFAULT_BROKER_CONFIG
            synonyms:
            - name: compression.type
              value: gzip
              source: DYNAMIC_DEFAULT_BROKER_CONFIG
            - name: compression.type
              value: producer
              source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/ClusterConfigData'
      description: The cluster configuration parameter.
    GetClusterResponse:
      content:
        application/json:
          example:
            kind: KafkaCluster
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1
              resource_name: crn:///kafka=cluster-1
            cluster_id: cluster-1
            controller:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
            acls:
              related: http://localhost:9391/v3/clusters/cluster-1/acls
            brokers:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers
            broker_configs:
              related: http://localhost:9391/v3/clusters/cluster-1/broker-configs
            consumer_groups:
              related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
            topics:
              related: http://localhost:9391/v3/clusters/cluster-1/topics
            partition_reassignments:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
          schema:
            $ref: '#/components/schemas/ClusterData'
      description: The Kafka cluster.
    GetConsumerAssignmentResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumerAssignment
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            consumer_id: consumer-1
            topic_name: topic-1
            partition_id: 1
            partition:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
          schema:
            $ref: '#/components/schemas/ConsumerAssignmentData'
      description: The consumer group assignment.
    GetConsumerGroupResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumerGroup
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            is_simple: false
            partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
            state: STABLE
            coordinator:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
            consumers:
              related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
          schema:
            $ref: '#/components/schemas/ConsumerGroupData'
      description: The consumer group.
    GetConsumerResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumer
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            consumer_id: consumer-1
            instance_id: consumer-instance-1
            client_id: client-1
            assignments:
              related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
          schema:
            $ref: '#/components/schemas/ConsumerData'
      description: The consumer.
    GetPartitionResponse:
      content:
        application/json:
          example:
            kind: KafkaPartition
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            leader:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
            replicas:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
            reassignment:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
          schema:
            $ref: '#/components/schemas/PartitionData'
      description: The partition
    GetReassignmentResponse:
      content:
        application/json:
          example:
            kind: KafkaReassignment
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            adding_replicas:
            - 1
            - 2
            removing_replicas:
            - 3
            replicas:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
          schema:
            $ref: '#/components/schemas/ReassignmentData'
      description: The ongoing replicas reassignments.
    GetReplicaResponse:
      content:
        application/json:
          example:
            kind: KafkaReplica
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            broker_id: 1
            is_leader: true
            is_in_sync: true
            broker:
              related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
          schema:
            $ref: '#/components/schemas/ReplicaData'
      description: The replica.
    GetTopicConfigResponse:
      content:
        application/json:
          example:
            kind: KafkaTopicConfig
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/compression.type
              resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
            cluster_id: cluster-1
            topic_name: topic-1
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_TOPIC_CONFIG
            synonyms:
            - name: compression.type
              value: gzip
              source: DYNAMIC_TOPIC_CONFIG
            - name: compression.type
              value: producer
              source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/TopicConfigData'
      description: The topic configuration parameter.
    GetTopicResponse:
      content:
        application/json:
          example:
            kind: KafkaTopic
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1
              resource_name: crn:///kafka=cluster-1/topic=topic-1
            cluster_id: cluster-1
            topic_name: topic-1
            is_internal: false
            replication_factor: 3
            partitions:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
            configs:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
            partition_reassignments:
              related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments
          schema:
            $ref: '#/components/schemas/TopicData'
      description: The topic.
    ListAllReassignmentsResponse:
      content:
        application/json:
          example:
            kind: KafkaReassignmentList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              next: null
            data:
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              adding_replicas:
              - 1
              - 2
              removing_replicas:
              - 3
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-2/partition=2/reassignment
              cluster_id: cluster-1
              topic_name: topic-2
              partition_id: 2
              adding_replicas:
              - 1
              removing_replicas:
              - 2
              - 3
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2/replicas
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/reassignment
              cluster_id: cluster-1
              topic_name: topic-3
              partition_id: 3
              adding_replicas:
              - 3
              removing_replicas:
              - 1
              - 2
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3/replicas
          schema:
            $ref: '#/components/schemas/ReassignmentDataList'
      description: The ongoing replicas reassignments.
    ListBrokerConfigsResponse:
      content:
        application/json:
          example:
            kind: KafkaBrokerConfigList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
              next: null
            data:
            - kind: KafkaBrokerConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/max.connections
                resource_name: crn:///kafka=cluster-1/broker=1/config=max.connections
              cluster_id: cluster-1
              broker_id: 1
              name: max.connections
              value: "1000"
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_BROKER_CONFIG
              synonyms:
              - name: max.connections
                value: "1000"
                source: DYNAMIC_BROKER_CONFIG
              - name: max.connections
                value: "2147483647"
                source: DEFAULT_CONFIG
            - kind: KafkaBrokerConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs/compression.type
                resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
              cluster_id: cluster-1
              broker_id: 1
              name: compression.type
              value: gzip
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_BROKER_CONFIG
              synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_BROKER_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/BrokerConfigDataList'
      description: The list of broker configs.
    ListBrokersResponse:
      content:
        application/json:
          example:
            kind: KafkaBrokerList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/brokers
              next: null
            data:
            - kind: KafkaBroker
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/brokers/1
                resource_name: crn:///kafka=cluster-1/broker=1
              cluster_id: cluster-1
              broker_id: 1
              host: localhost
              port: 9291
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/configs
              partition_replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
            - kind: KafkaBroker
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/brokers/2
                resource_name: crn:///kafka=cluster-1/broker=2
              cluster_id: cluster-1
              broker_id: 2
              host: localhost
              port: 9292
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/2/configs
              partition_replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/2/partition-replicas
            - kind: KafkaBroker
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/brokers/3
                resource_name: crn:///kafka=cluster-1/broker=3
              cluster_id: cluster-1
              broker_id: 3
              host: localhost
              port: 9293
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/3/configs
              partition_replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/3/partition-replicas
          schema:
            $ref: '#/components/schemas/BrokerDataList'
      description: The list of brokers.
    ListClusterConfigsResponse:
      content:
        application/json:
          example:
            kind: KafkaClusterConfigList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/broker-configs
              next: null
            data:
            - kind: KafkaClusterConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/max.connections
                resource_name: crn:///kafka=cluster-1/broker-config=max.connections
              cluster_id: cluster-1
              config_type: BROKER
              name: max.connections
              value: "1000"
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_DEFAULT_BROKER_CONFIG
              synonyms:
              - name: max.connections
                value: "1000"
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
              - name: max.connections
                value: "2147483647"
                source: DEFAULT_CONFIG
            - kind: KafkaClusterConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/broker-configs/compression.type
                resource_name: crn:///kafka=cluster-1/broker-config=compression.type
              cluster_id: cluster-1
              config_type: BROKER
              name: compression.type
              value: gzip
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_DEFAULT_BROKER_CONFIG
              synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/ClusterConfigDataList'
      description: The list of cluster configs.
    ListClustersResponse:
      content:
        application/json:
          example:
            kind: KafkaClusterList
            metadata:
              self: http://localhost:9391/v3/clusters
              next: null
            data:
            - kind: KafkaCluster
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1
                resource_name: crn:///kafka=cluster-1
              cluster_id: cluster-1
              controller:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
              acls:
                related: http://localhost:9391/v3/clusters/cluster-1/acls
              brokers:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers
              broker_configs:
                related: http://localhost:9391/v3/clusters/cluster-1/broker-configs
              consumer_groups:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
              topics:
                related: http://localhost:9391/v3/clusters/cluster-1/topics
              partition_reassignments:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
          schema:
            $ref: '#/components/schemas/ClusterDataList'
      description: The list of Kafka clusters.
    ListConsumerAssignmentsResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumerAssignmentList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
              next: null
            data:
            - kind: KafkaConsumerAssignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-1
              topic_name: topic-1
              partition_id: 1
              partition:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
            - kind: KafkaConsumerAssignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-2/partitions/2
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=2/partition=2
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-1
              topic_name: topic-2
              partition_id: 2
              partition:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/2
            - kind: KafkaConsumerAssignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-3/partitions/3
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=3/partition=3
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-1
              topic_name: topic-3
              partition_id: 3
              partition:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/3
          schema:
            $ref: '#/components/schemas/ConsumerAssignmentDataList'
      description: The list of consumer group assignments.
    ListConsumerGroupsResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumerGroupList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups
              next: null
            data:
            - kind: KafkaConsumerGroup
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              is_simple: false
              partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
              state: STABLE
              coordinator:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
              consumers:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
            - kind: KafkaConsumerGroup
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-2
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-2
              cluster_id: cluster-1
              consumer_group_id: consumer-group-2
              is_simple: false
              partition_assignor: org.apache.kafka.clients.consumer.StickyAssignor
              state: PREPARING_REBALANCE
              coordinator:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/2
              consumers:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-2/consumers
            - kind: KafkaConsumerGroup
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-3
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-3
              cluster_id: cluster-1
              consumer_group_id: consumer-group-3
              is_simple: false
              partition_assignor: org.apache.kafka.clients.consumer.RangeAssignor
              state: DEAD
              coordinator:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/3
              consumers:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-3/consumers
          schema:
            $ref: '#/components/schemas/ConsumerGroupDataList'
      description: The list of consumer groups.
    ListConsumersResponse:
      content:
        application/json:
          example:
            kind: KafkaConsumerList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
              next: null
            data:
            - kind: KafkaConsumer
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-1
              instance_id: consumer-instance-1
              client_id: client-1
              assignments:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
            - kind: KafkaConsumer
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-2
              instance_id: consumer-instance-2
              client_id: client-2
              assignments:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments
            - kind: KafkaConsumer
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
              cluster_id: cluster-1
              consumer_group_id: consumer-group-1
              consumer_id: consumer-2
              instance_id: consumer-instance-2
              client_id: client-2
              assignments:
                related: http://localhost:9391/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments
          schema:
            $ref: '#/components/schemas/ConsumerDataList'
      description: The list of consumers.
    ListPartitionsResponse:
      content:
        application/json:
          example:
            kind: KafkaPartitionList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
              next: null
            data:
            - kind: KafkaPartition
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              leader:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              reassignment:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
            - kind: KafkaPartition
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 2
              leader:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/2
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
              reassignment:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
            - kind: KafkaPartition
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 3
              leader:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas/3
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas
              reassignment:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment
          schema:
            $ref: '#/components/schemas/PartitionDataList'
      description: The list of partitions.
    ListReplicasResponse:
      content:
        application/json:
          example:
            kind: KafkaReplicaList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              next: null
            data:
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              broker_id: 1
              is_leader: true
              is_in_sync: true
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/2
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=2
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              broker_id: 2
              is_leader: false
              is_in_sync: true
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/2
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/3
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=3
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              broker_id: 3
              is_leader: false
              is_in_sync: false
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/3
          schema:
            $ref: '#/components/schemas/ReplicaDataList'
      description: The list of replicas.
    ListTopicConfigsResponse:
      content:
        application/json:
          example:
            kind: KafkaTopicConfigList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
              next: null
            data:
            - kind: KafkaTopicConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs/cleanup.policy
                resource_name: crn:///kafka=cluster-1/topic=topic-1/config=cleanup.policy
              cluster_id: cluster-1
              topic_name: topic-1
              name: cleanup.policy
              value: compact
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_TOPIC_CONFIG
              synonyms:
              - name: cleanup.policy
                value: compact
                source: DYNAMIC_TOPIC_CONFIG
              - name: cleanup.policy
                value: delete
                source: DEFAULT_CONFIG
            - kind: KafkaTopicConfig
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs/compression.type
                resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
              cluster_id: cluster-1
              topic_name: topic-1
              name: compression.type
              value: gzip
              is_default: false
              is_read_only: false
              is_sensitive: false
              source: DYNAMIC_TOPIC_CONFIG
              synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_TOPIC_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG
          schema:
            $ref: '#/components/schemas/TopicConfigDataList'
      description: The list of cluster configs.
    ListTopicsResponse:
      content:
        application/json:
          example:
            kind: KafkaTopicList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics
              next: null
            data:
            - kind: KafkaTopic
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1
                resource_name: crn:///kafka=cluster-1/topic=topic-1
              cluster_id: cluster-1
              topic_name: topic-1
              is_internal: false
              replication_factor: 3
              partitions:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/configs
              partition_reassignments:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments
            - kind: KafkaTopic
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2
                resource_name: crn:///kafka=cluster-1/topic=topic-2
              cluster_id: cluster-1
              topic_name: topic-2
              is_internal: true
              replication_factor: 4
              partitions:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/configs
              partition_reassignments:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/-/reassignments
            - kind: KafkaTopic
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3
                resource_name: crn:///kafka=cluster-1/topic=topic-3
              cluster_id: cluster-1
              topic_name: topic-3
              is_internal: false
              replication_factor: 5
              partitions:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions
              configs:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/configs
              partition_reassignments:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/-/reassignments
          schema:
            $ref: '#/components/schemas/TopicDataList'
      description: The list of topics.
    SearchAclsResponse:
      content:
        application/json:
          example:
            kind: KafkaAclList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/acls?principal=alice
            data:
            - kind: KafkaAcl
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=alice&host=*&operation=ALL&permission=ALLOW
              cluster_id: cluster-1
              resource_type: TOPIC
              resource_name: topic-
              pattern_type: PREFIXED
              principal: alice
              host: '*'
              operation: ALL
              permission: ALLOW
            - kind: KafkaAcl
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=cluster-1&pattern_type=LITERAL&principal=bob&host=*&operation=DESCRIBE&permission=DENY
              cluster_id: cluster-1
              resource_type: CLUSTER
              resource_name: cluster-2
              pattern_type: LITERAL
              principal: alice
              host: '*'
              operation: DESCRIBE
              permission: DENY
          schema:
            $ref: '#/components/schemas/AclDataList'
      description: The list of ACLs.
    SearchReassignmentsByTopicResponse:
      content:
        application/json:
          example:
            kind: KafkaReassignmentList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              next: null
            data:
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 1
              adding_replicas:
              - 1
              - 2
              removing_replicas:
              - 3
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/reassignment
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 2
              adding_replicas:
              - 1
              removing_replicas:
              - 2
              - 3
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
            - kind: KafkaReassignment
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3/reassignment
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 3
              adding_replicas:
              - 3
              removing_replicas:
              - 1
              - 2
              replicas:
                related: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas
          schema:
            $ref: '#/components/schemas/ReassignmentDataList'
      description: The ongoing replicas reassignments.
    SearchReplicasByBrokerResponse:
      content:
        application/json:
          example:
            kind: KafkaReplicaList
            metadata:
              self: http://localhost:9391/v3/clusters/cluster-1/brokers/1/partition-replicas
              next: null
            data:
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/1
                resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/replica=1
              cluster_id: cluster-1
              topic_name: topic-1
              partition_id: 2
              broker_id: 1
              is_leader: true
              is_in_sync: true
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-2/partitions/3/replicas/1
                resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/replica=1
              cluster_id: cluster-1
              topic_name: topic-2
              partition_id: 3
              broker_id: 1
              is_leader: false
              is_in_sync: true
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
            - kind: KafkaReplica
              metadata:
                self: http://localhost:9391/v3/clusters/cluster-1/topics/topic-3/partitions/1/replicas/1
                resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=1/replica=1
              cluster_id: cluster-1
              topic_name: topic-3
              partition_id: 1
              broker_id: 1
              is_leader: false
              is_in_sync: false
              broker:
                related: http://localhost:9391/v3/clusters/cluster-1/brokers/1
          schema:
            $ref: '#/components/schemas/ReplicaDataList'
      description: The list of replicas.
    NoContentResponse:
      content:
        application/json: {}
      description: Operation succeeded, no content in the response
    ListLinksResponse:
      content:
        application/json:
          example:
            kind: KafkaLinkDataList
            metadata:
              self: http://localhost:63699/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links
              next: null
            data:
            - kind: KafkaLinkData
              metadata:
                self: http://localhost:58441/kafka/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-1
                resource_name: null
              cluster_id: src-cluster-id
              link_name: my-new-link-1
              link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
              topic_names:
              - topic-sb-1
              - topic-sb-2
            - kind: KafkaLinkData
              metadata:
                self: http://localhost:58441/kafka/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-2
                resource_name: null
              cluster_id: src-cluster-id
              link_name: my-new-link-2
              link_id: abced-f7d8-4844-a577-abcdefghijklmnp
              topic_names:
              - topic-db-1
              - topic-db-2
          schema:
            $ref: '#/components/schemas/ListLinksResponseDataList'
      description: A list of link names and properties
    GetLinkResponse:
      content:
        application/json:
          example:
            kind: KafkaLinkData
            metadata:
              self: http://localhost:63699/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/my-new-link-1
              resource_name: null
            cluster_id: src-cluster-id
            link_name: my-new-link-1
            link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
            topic_names:
            - topic-db-1
            - topic-db-2
          schema:
            $ref: '#/components/schemas/ListLinksResponseData'
      description: Single link name and properties
    ListLinkConfigsResponse:
      content:
        application/json:
          example:
            kind: KafkaLinkConfigDataList
            metadata:
              self: http://localhost:56450/kafka/v3/clusters/v-0Ce-CkTyKQol9v46LaCQ/links/link-nb-1/configs
              next: null
            data:
            - kind: KafkaLinkConfigData
              metadata:
                self: http://localhost:56608/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                resource_name: null
              cluster_id: 1Rh_4htxSuen7RYGvGmgNw
              name: consumer.offset.sync.ms
              value: "3825940"
              default: false
              read_only: false
              sensitive: false
              source: DYNAMIC_CLUSTER_LINK_CONFIG
              synonyms:
              - cosm
              link_name: link-db-1
              link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
            - kind: KafkaLinkConfigData
              metadata:
                self: http://localhost:56608/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                resource_name: null
              cluster_id: 1Rh_4htxSuen7RYGvGmgNw
              name: acl.sync.ms
              value: "5000"
              default: false
              read_only: false
              sensitive: false
              source: DYNAMIC_CLUSTER_LINK_CONFIG
              synonyms:
              - asm
              link_name: link-db-1
              link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
          schema:
            $ref: '#/components/schemas/ListLinkConfigsResponseDataList'
      description: Config name and value
    GetLinkConfigsResponse:
      content:
        application/json:
          example:
            kind: KafkaLinkConfigData
            metadata:
              self: http://localhost:56608/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
              resource_name: null
            cluster_id: 1Rh_4htxSuen7RYGvGmgNw
            name: consumer.offset.sync.ms
            value: "3825940"
            default: false
            read_only: false
            sensitive: false
            source: DYNAMIC_CLUSTER_LINK_CONFIG
            synonyms:
            - cosm
            link_name: link-db-1
            link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
            topics:
            - topic-db-1
            - topic-db-2
          schema:
            $ref: '#/components/schemas/ListLinkConfigsResponseData'
      description: Config name and value
    ListMirrorTopicsResponse:
      content:
        application/json:
          example:
            kind: KafkaMirrorDataList
            metadata:
              self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors
              resource_name: crn:///kafka=cluster-1
              next: null
            data:
            - kind: KafkaMirrorData
              metadata:
                self: http://localhost:63699/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/link-1/mirrors/topic-1
                resource_name: crn:///kafka=cluster-1
              resource_name: crn:///kafka=cluster-1
              destination_topic_name: topic-1
              source_topic_name: topic-1
              mirror_topic_status: active
              state_time_ms: 1612550939300
            - kind: KafkaMirrorData
              metadata:
                self: http://localhost:63699/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/link-1/mirrors/topic-2
                resource_name: crn:///kafka=cluster-1
              resource_name: crn:///kafka=cluster-1
              destination_topic_name: topic-2
              source_topic_name: topic-2
              mirror_topic_status: stopped
              state_time_ms: 1612551353640
          schema:
            $ref: '#/components/schemas/ListMirrorTopicsResponseDataList'
      description: Metadata of mirror topics
    DescribeMirrorTopicResponse:
      content:
        application/json:
          example:
            kind: KafkaMirrorData
            metadata:
              self: http://localhost:9391/kafka/v3/clusters/cluster-1/link/link-1/mirrors/topic-1
              resource_name: crn:///kafka=cluster-1
            destination_topic_name: topic-1
            source_topic_name: topic-1
            mirror_topic_status: active
            state_time_ms: 1612550939300
          schema:
            $ref: '#/components/schemas/ListMirrorTopicsResponseData'
      description: Metadata of the mirror topic
    AlterMirrorStatusResponse:
      content:
        application/json:
          example:
            kind: KafkaPromoteMirror
            metadata:
              self: http://localhost:9391/kafka/v3/clusters/cluster-1/links/link-1/mirrors
              resource_name: crn:///kafka=cluster-1
            data:
            - kind: AlterMirrorsData
              metadata:
                self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                resource: crn:///kafka=cluster-1
              destination_topic_name: topic-sb
              error_code: null
              error_message: null
            - kind: AlterMirrorsData
              metadata:
                self: http://localhost:51032/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                resource: crn:///kafka=cluster-1
              destination_topic_name: topic-2
              error_code: 400
              error_message: Topic 'topic-2' has already stopped its mirror from 'my-new-link-1'
          schema:
            $ref: '#/components/schemas/AlterMirrorStatusResponseDataList'
      description: Mirror status alternation result
  schemas:
    AbstractConfigData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/AbstractConfigData_allOf'
    AclData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/AclData_allOf'
    AclDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/inline_response_200'
    AclOperation:
      enum:
      - UNKNOWN
      - ANY
      - ALL
      - READ
      - WRITE
      - CREATE
      - DELETE
      - ALTER
      - DESCRIBE
      - CLUSTER_ACTION
      - DESCRIBE_CONFIGS
      - ALTER_CONFIGS
      - IDEMPOTENT_WRITE
      type: string
    AclPatternType:
      enum:
      - UNKNOWN
      - ANY
      - MATCH
      - LITERAL
      - PREFIXED
      type: string
    AclPermission:
      enum:
      - UNKNOWN
      - ANY
      - DENY
      - ALLOW
      type: string
    AclResourceType:
      enum:
      - UNKNOWN
      - ANY
      - TOPIC
      - GROUP
      - CLUSTER
      - TRANSACTIONAL_ID
      - DELEGATION_TOKEN
      type: string
    AlterConfigBatchRequestData:
      example:
        data:
        - name: name
          value: value
          operation: SET
        - name: name
          value: value
          operation: SET
      properties:
        data:
          items:
            $ref: '#/components/schemas/AlterConfigBatchRequestData_data'
          type: array
      required:
      - data
      type: object
    BrokerConfigData:
      allOf:
      - $ref: '#/components/schemas/AbstractConfigData'
      - $ref: '#/components/schemas/BrokerConfigData_allOf'
    BrokerConfigDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/BrokerConfigDataList_allOf'
    BrokerData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/BrokerData_allOf'
    BrokerDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/BrokerDataList_allOf'
    ClusterConfigData:
      allOf:
      - $ref: '#/components/schemas/AbstractConfigData'
      - $ref: '#/components/schemas/ClusterConfigData_allOf'
    ClusterConfigDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ClusterConfigDataList_allOf'
    ClusterConfigType:
      enum:
      - BROKER
      type: string
    ClusterData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ClusterData_allOf'
    ClusterDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ClusterDataList_allOf'
    CreateAclRequestData:
      example:
        principal: principal
        host: host
        resource_name: resource_name
      properties:
        resource_type:
          $ref: '#/components/schemas/AclResourceType'
        resource_name:
          type: string
        pattern_type:
          $ref: '#/components/schemas/AclPatternType'
        principal:
          type: string
        host:
          type: string
        operation:
          $ref: '#/components/schemas/AclOperation'
        permission:
          $ref: '#/components/schemas/AclPermission'
      required:
      - host
      - operation
      - pattern_type
      - permission
      - principal
      - resource_name
      - resource_type
      type: object
    CreateTopicRequestData:
      example:
        configs:
        - name: name
          value: value
        - name: name
          value: value
        replication_factor: 6
        topic_name: topic_name
        partitions_count: 0
      properties:
        topic_name:
          type: string
        partitions_count:
          type: integer
        replication_factor:
          type: integer
        configs:
          items:
            $ref: '#/components/schemas/CreateTopicRequestData_configs'
          type: array
      required:
      - partitions_count
      - replication_factor
      - topic_name
      type: object
    ConfigSource:
      enum:
      - DYNAMIC_CLUSTER_LINK_CONFIG
      - DYNAMIC_TOPIC_CONFIG
      - DYNAMIC_BROKER_LOGGER_CONFIG
      - DYNAMIC_BROKER_CONFIG
      - DYNAMIC_DEFAULT_BROKER_CONFIG
      - STATIC_BROKER_CONFIG
      - DEFAULT_CONFIG
      - UNKNOWN
      type: string
    ConfigSynonymData:
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
      required:
      - name
      - source
      type: object
    ConsumerAssignmentData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ConsumerAssignmentData_allOf'
    ConsumerAssignmentDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ConsumerAssignmentDataList_allOf'
    ConsumerData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ConsumerData_allOf'
    ConsumerDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ConsumerDataList_allOf'
    ConsumerGroupData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ConsumerGroupData_allOf'
    ConsumerGroupDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ConsumerGroupDataList_allOf'
    ConsumerGroupState:
      enum:
      - UNKNOWN
      - PREPARING_REBALANCE
      - COMPLETING_REBALANCE
      - STABLE
      - DEAD
      - EMPTY
      type: string
    PartitionData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/PartitionData_allOf'
    PartitionDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/PartitionDataList_allOf'
    ReassignmentData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ReassignmentData_allOf'
    ReassignmentDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ReassignmentDataList_allOf'
    Relationship:
      properties:
        related:
          type: string
      required:
      - related
      type: object
    ReplicaData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ReplicaData_allOf'
    ReplicaDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ReplicaDataList_allOf'
    Resource:
      properties:
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/ResourceMetadata'
      required:
      - kind
      - metadata
      type: object
    ResourceCollection:
      properties:
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/ResourceCollectionMetadata'
      required:
      - kind
      - metadata
      type: object
    ResourceCollectionMetadata:
      properties:
        self:
          type: string
        next:
          nullable: true
          type: string
      required:
      - self
      type: object
    ResourceMetadata:
      properties:
        self:
          type: string
        resource_name:
          nullable: true
          type: string
      required:
      - self
      type: object
    TopicConfigData:
      allOf:
      - $ref: '#/components/schemas/AbstractConfigData'
      - $ref: '#/components/schemas/TopicConfigData_allOf'
    TopicConfigDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/TopicConfigDataList_allOf'
    TopicData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/TopicData_allOf'
    TopicDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/TopicDataList_allOf'
    UpdateConfigRequestData:
      example:
        value: value
      properties:
        value:
          nullable: true
          type: string
      type: object
    inline_response_200:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/AclData'
          type: array
      required:
      - data
    AbstractConfigData_allOf:
      properties:
        cluster_id:
          type: string
        name:
          type: string
        value:
          nullable: true
          type: string
        is_default:
          type: boolean
        is_read_only:
          type: boolean
        is_sensitive:
          type: boolean
        source:
          $ref: '#/components/schemas/ConfigSource'
        synonyms:
          items:
            $ref: '#/components/schemas/ConfigSynonymData'
          type: array
      required:
      - cluster_id
      - is_default
      - is_read_only
      - is_sensitive
      - name
      - source
      - synonyms
    AclData_allOf:
      properties:
        cluster_id:
          type: string
        resource_type:
          $ref: '#/components/schemas/AclResourceType'
        resource_name:
          type: string
        pattern_type:
          $ref: '#/components/schemas/AclPatternType'
        principal:
          type: string
        host:
          type: string
        operation:
          $ref: '#/components/schemas/AclOperation'
        permission:
          $ref: '#/components/schemas/AclPermission'
      required:
      - cluster_id
      - host
      - operation
      - pattern_type
      - permission
      - principal
      - resource_name
      - resource_type
    AlterConfigBatchRequestData_data:
      example:
        name: name
        value: value
        operation: SET
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
        operation:
          enum:
          - SET
          - DELETE
          nullable: true
          type: string
      required:
      - name
    BrokerConfigData_allOf:
      properties:
        broker_id:
          type: integer
      required:
      - broker_id
    BrokerConfigDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/BrokerConfigData'
          type: array
      required:
      - data
    BrokerData_allOf:
      properties:
        cluster_id:
          type: string
        broker_id:
          type: integer
        host:
          nullable: true
          type: string
        port:
          nullable: true
          type: integer
        rack:
          nullable: true
          type: string
        configs:
          $ref: '#/components/schemas/Relationship'
        partition_replicas:
          $ref: '#/components/schemas/Relationship'
      required:
      - broker_id
      - cluster_id
      - configs
      - partition_replicas
    BrokerDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/BrokerData'
          type: array
      required:
      - data
    ClusterConfigData_allOf:
      properties:
        config_type:
          $ref: '#/components/schemas/ClusterConfigType'
      required:
      - config_type
    ClusterConfigDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ClusterConfigData'
          type: array
      required:
      - data
    ClusterData_allOf:
      properties:
        cluster_id:
          type: string
        controller:
          $ref: '#/components/schemas/Relationship'
        acls:
          $ref: '#/components/schemas/Relationship'
        brokers:
          $ref: '#/components/schemas/Relationship'
        broker_configs:
          $ref: '#/components/schemas/Relationship'
        consumer_groups:
          $ref: '#/components/schemas/Relationship'
        topics:
          $ref: '#/components/schemas/Relationship'
        partition_reassignments:
          $ref: '#/components/schemas/Relationship'
      required:
      - acls
      - broker_configs
      - brokers
      - cluster_id
      - consumer_groups
      - partition_reassignments
      - topics
    ClusterDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ClusterData'
          type: array
      required:
      - data
    CreateTopicRequestData_configs:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
      required:
      - name
    ConsumerAssignmentData_allOf:
      properties:
        cluster_id:
          type: string
        consumer_group_id:
          type: string
        consumer_id:
          type: string
        topic_name:
          type: string
        partition_id:
          type: integer
        partition:
          $ref: '#/components/schemas/Relationship'
      required:
      - cluster_id
      - consumer_group_id
      - consumer_id
      - partition
      - partition_id
      - topic_name
    ConsumerAssignmentDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ConsumerAssignmentData'
          type: array
      required:
      - data
    ConsumerData_allOf:
      properties:
        cluster_id:
          type: string
        consumer_group_id:
          type: string
        consumer_id:
          type: string
        instance_id:
          nullable: true
          type: string
        client_id:
          type: string
        assignments:
          $ref: '#/components/schemas/Relationship'
      required:
      - assignments
      - client_id
      - cluster_id
      - consumer_group_id
      - consumer_id
    ConsumerDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ConsumerData'
          type: array
      required:
      - data
    ConsumerGroupData_allOf:
      properties:
        cluster_id:
          type: string
        consumer_group_id:
          type: string
        is_simple:
          type: boolean
        partition_assignor:
          type: string
        state:
          $ref: '#/components/schemas/ConsumerGroupState'
        coordinator:
          $ref: '#/components/schemas/Relationship'
        consumer:
          $ref: '#/components/schemas/Relationship'
      required:
      - cluster_id
      - consumer_group_id
      - consumers
      - coordinator
      - is_simple
      - partition_assignor
      - state
    ConsumerGroupDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ConsumerGroupData'
          type: array
      required:
      - data
    PartitionData_allOf:
      properties:
        cluster_id:
          type: string
        topic_name:
          type: string
        partition_id:
          type: integer
        leader:
          $ref: '#/components/schemas/Relationship'
        replicas:
          $ref: '#/components/schemas/Relationship'
        reassignment:
          $ref: '#/components/schemas/Relationship'
      required:
      - cluster_id
      - partition_id
      - reassignment
      - replicas
      - topic_name
    PartitionDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartitionData'
          type: array
      required:
      - data
    ReassignmentData_allOf:
      properties:
        cluster_id:
          type: string
        topic_name:
          type: string
        partition_id:
          type: integer
        adding_replicas:
          items:
            type: integer
          type: array
        removing_replicas:
          items:
            type: integer
          type: array
        replicas:
          $ref: '#/components/schemas/Relationship'
      required:
      - adding_replicas
      - cluster_id
      - partition_id
      - removing_replicas
      - replicas
      - topic_name
    ReassignmentDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReassignmentData'
          type: array
      required:
      - data
    ReplicaData_allOf:
      properties:
        cluster_id:
          type: string
        topic_name:
          type: string
        partition_id:
          type: integer
        broker_id:
          type: integer
        is_leader:
          type: boolean
        is_in_sync:
          type: boolean
        broker:
          $ref: '#/components/schemas/Relationship'
      required:
      - broker
      - broker_id
      - cluster_id
      - is_in_sync
      - is_leader
      - partition_id
      - topic_name
    ReplicaDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReplicaData'
          type: array
      required:
      - data
    TopicConfigData_allOf:
      properties:
        topic_name:
          type: string
      required:
      - topic_name
    TopicConfigDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TopicConfigData'
          type: array
      required:
      - data
    TopicData_allOf:
      properties:
        cluster_id:
          type: string
        topic_name:
          type: string
        is_internal:
          type: boolean
        replication_factor:
          type: integer
        partitions:
          $ref: '#/components/schemas/Relationship'
        configs:
          $ref: '#/components/schemas/Relationship'
        partition_reassignments:
          $ref: '#/components/schemas/Relationship'
      required:
      - cluster_id
      - configs
      - is_internal
      - partition_reassignments
      - partitions
      - replication_factor
      - topic_name
    TopicDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TopicData'
          type: array
      required:
      - data
    CreateLinkRequestData:
      example:
        configs:
        - name: name
          value: value
        - name: name
          value: value
        src_cluster_id: src_cluster_id
      properties:
        source_cluster_id:
          type: string
        configs:
          items:
            $ref: '#/components/schemas/CreateTopicRequestData_configs'
          type: array
      required:
      - source_cluster_id
      type: object
    UpdateLinkConfigRequestData:
      example:
        value: value
      properties:
        value:
          type: string
      required:
      - value
      type: object
    ListLinksResponseData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ListLinksResponseData_allOf'
    ListLinksResponseDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ListLinksResponseDataList_allOf'
    ListLinkConfigsResponseData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ListLinkConfigsResponseData_allOf'
    ListLinkConfigsResponseDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ListLinkConfigsResponseDataList_allOf'
    ListLinksResponseDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ListLinksResponseData'
          type: array
      required:
      - data
    ListLinkConfigsResponseData_allOf:
      properties:
        cluster_id:
          type: string
        name:
          type: string
        value:
          type: string
        read_only:
          type: boolean
        sensitive:
          type: boolean
        source:
          enum:
          - DYNAMIC_CLUSTER_LINK_CONFIG
          type: string
        synonyms:
          items:
            type: string
          type: array
        link_name:
          type: string
      required:
      - cluster_id
      - default
      - link_name
      - name
      - read_only
      - sensitive
      - source
      - synonyms
      - value
    ListLinkConfigsResponseDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ListLinkConfigsResponseData'
          type: array
      required:
      - data
    ConfigData:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
      required:
      - name
      - value
    CreateMirrorTopicRequestData:
      example:
        configs:
        - '{}'
        - '{}'
        source_topic_name: source_topic_name
        replication_factor: 0
      properties:
        source_topic_name:
          type: string
        replication_factor:
          type: integer
        configs:
          items:
            $ref: '#/components/schemas/ConfigData'
          type: array
      required:
      - source_topic_name
      type: object
    AlterMirrorsRequestData:
      example:
        destination_topic_names:
        - destination_topic_names
        - destination_topic_names
      properties:
        destination_topic_names:
          items:
            type: string
          type: array
      required:
      - destination_topic_names
      type: object
    ListMirrorTopicsResponseData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/ListMirrorTopicsResponseData_allOf'
    ListMirrorTopicsResponseDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/ListMirrorTopicsResponseDataList_allOf'
    AlterMirrorStatusResponseDataList:
      allOf:
      - $ref: '#/components/schemas/ResourceCollection'
      - $ref: '#/components/schemas/AlterMirrorStatusResponseDataList_allOf'
    AlterMirrorStatusResponseData:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - $ref: '#/components/schemas/AlterMirrorStatusResponseData_allOf'
    ListMirrorTopicsResponseDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ListMirrorTopicsResponseData'
          type: array
      required:
      - data
    AlterMirrorStatusResponseDataList_allOf:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AlterMirrorStatusResponseData'
          type: array
      required:
      - data
    MirrorTopicStatus:
      enum:
      - active
      - failed
      - paused
      - stopped
      - pending_stopped
      type: string
    AlterMirrorStatusResponseData_allOf:
      properties:
        destination_topic_name:
          type: string
        error_message:
          nullable: true
          type: string
        error_code:
          nullable: true
          type: integer
      required:
      - destination_topic_name
      - error_code
      - error_message
    ListLinksResponseData_allOf:
      properties:
        cluster_id:
          type: string
        link_name:
          type: string
        link_id:
          type: string
        topics_names:
          items:
            type: string
          type: array
      required:
      - cluster_id
      - link_id
      - link_name
      - topic_names
    ListMirrorTopicsResponseData_allOf:
      properties:
        destination_topic_name:
          type: string
        source_topic_name:
          type: string
        mirror_topic_status:
          $ref: '#/components/schemas/MirrorTopicStatus'
        state_time_ms:
          type: integer
      required:
      - destination_topic_name
      - mirror_topic_status
      - source_topic_name
      - state_time_ms
