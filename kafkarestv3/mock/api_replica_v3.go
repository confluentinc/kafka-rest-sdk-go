// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: ../kafka-rest-sdk-go/kafkarestv3/api_replica_v3.go

package mock

import (
	context "context"
	net_http "net/http"
	sync "sync"

	github_com_confluentinc_kafka_rest_sdk_go_kafkarestv3 "github.com/confluentinc/kafka-rest-sdk-go/kafkarestv3"
)

// ReplicaV3Api is a mock of ReplicaV3Api interface
type ReplicaV3Api struct {
	lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet sync.Mutex
	ClustersClusterIdBrokersBrokerIdPartitionReplicasGetFunc func(ctx context.Context, clusterId string, brokerId int32) (github_com_confluentinc_kafka_rest_sdk_go_kafkarestv3.ReplicaDataList, *net_http.Response, error)

	calls struct {
		ClustersClusterIdBrokersBrokerIdPartitionReplicasGet []struct {
			Ctx       context.Context
			ClusterId string
			BrokerId  int32
		}
	}
}

// ClustersClusterIdBrokersBrokerIdPartitionReplicasGet mocks base method by wrapping the associated func.
func (m *ReplicaV3Api) ClustersClusterIdBrokersBrokerIdPartitionReplicasGet(ctx context.Context, clusterId string, brokerId int32) (github_com_confluentinc_kafka_rest_sdk_go_kafkarestv3.ReplicaDataList, *net_http.Response, error) {
	m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Lock()
	defer m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Unlock()

	if m.ClustersClusterIdBrokersBrokerIdPartitionReplicasGetFunc == nil {
		panic("mocker: ReplicaV3Api.ClustersClusterIdBrokersBrokerIdPartitionReplicasGetFunc is nil but ReplicaV3Api.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet was called.")
	}

	call := struct {
		Ctx       context.Context
		ClusterId string
		BrokerId  int32
	}{
		Ctx:       ctx,
		ClusterId: clusterId,
		BrokerId:  brokerId,
	}

	m.calls.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet = append(m.calls.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet, call)

	return m.ClustersClusterIdBrokersBrokerIdPartitionReplicasGetFunc(ctx, clusterId, brokerId)
}

// ClustersClusterIdBrokersBrokerIdPartitionReplicasGetCalled returns true if ClustersClusterIdBrokersBrokerIdPartitionReplicasGet was called at least once.
func (m *ReplicaV3Api) ClustersClusterIdBrokersBrokerIdPartitionReplicasGetCalled() bool {
	m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Lock()
	defer m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Unlock()

	return len(m.calls.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet) > 0
}

// ClustersClusterIdBrokersBrokerIdPartitionReplicasGetCalls returns the calls made to ClustersClusterIdBrokersBrokerIdPartitionReplicasGet.
func (m *ReplicaV3Api) ClustersClusterIdBrokersBrokerIdPartitionReplicasGetCalls() []struct {
	Ctx       context.Context
	ClusterId string
	BrokerId  int32
} {
	m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Lock()
	defer m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Unlock()

	return m.calls.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet
}

// Reset resets the calls made to the mocked methods.
func (m *ReplicaV3Api) Reset() {
	m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Lock()
	m.calls.ClustersClusterIdBrokersBrokerIdPartitionReplicasGet = nil
	m.lockClustersClusterIdBrokersBrokerIdPartitionReplicasGet.Unlock()
}
