// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: ../kafka-rest-sdk-go/kafkarestv3/api_broker.go

package mock

import (
	command_line_arguments "command-line-arguments"
	context "context"
	net_http "net/http"
	sync "sync"
)

// BrokerApi is a mock of BrokerApi interface
type BrokerApi struct {
	lockClustersClusterIdBrokersdeletePost sync.Mutex
	ClustersClusterIdBrokersdeletePostFunc func(ctx context.Context, clusterId string, localVarOptionals *command_line_arguments.ClustersClusterIdBrokersdeletePostOpts) (command_line_arguments.BrokerRemovalDataList, *net_http.Response, error)

	calls struct {
		ClustersClusterIdBrokersdeletePost []struct {
			Ctx               context.Context
			ClusterId         string
			LocalVarOptionals *command_line_arguments.ClustersClusterIdBrokersdeletePostOpts
		}
	}
}

// ClustersClusterIdBrokersdeletePost mocks base method by wrapping the associated func.
func (m *BrokerApi) ClustersClusterIdBrokersdeletePost(ctx context.Context, clusterId string, localVarOptionals *command_line_arguments.ClustersClusterIdBrokersdeletePostOpts) (command_line_arguments.BrokerRemovalDataList, *net_http.Response, error) {
	m.lockClustersClusterIdBrokersdeletePost.Lock()
	defer m.lockClustersClusterIdBrokersdeletePost.Unlock()

	if m.ClustersClusterIdBrokersdeletePostFunc == nil {
		panic("mocker: BrokerApi.ClustersClusterIdBrokersdeletePostFunc is nil but BrokerApi.ClustersClusterIdBrokersdeletePost was called.")
	}

	call := struct {
		Ctx               context.Context
		ClusterId         string
		LocalVarOptionals *command_line_arguments.ClustersClusterIdBrokersdeletePostOpts
	}{
		Ctx:               ctx,
		ClusterId:         clusterId,
		LocalVarOptionals: localVarOptionals,
	}

	m.calls.ClustersClusterIdBrokersdeletePost = append(m.calls.ClustersClusterIdBrokersdeletePost, call)

	return m.ClustersClusterIdBrokersdeletePostFunc(ctx, clusterId, localVarOptionals)
}

// ClustersClusterIdBrokersdeletePostCalled returns true if ClustersClusterIdBrokersdeletePost was called at least once.
func (m *BrokerApi) ClustersClusterIdBrokersdeletePostCalled() bool {
	m.lockClustersClusterIdBrokersdeletePost.Lock()
	defer m.lockClustersClusterIdBrokersdeletePost.Unlock()

	return len(m.calls.ClustersClusterIdBrokersdeletePost) > 0
}

// ClustersClusterIdBrokersdeletePostCalls returns the calls made to ClustersClusterIdBrokersdeletePost.
func (m *BrokerApi) ClustersClusterIdBrokersdeletePostCalls() []struct {
	Ctx               context.Context
	ClusterId         string
	LocalVarOptionals *command_line_arguments.ClustersClusterIdBrokersdeletePostOpts
} {
	m.lockClustersClusterIdBrokersdeletePost.Lock()
	defer m.lockClustersClusterIdBrokersdeletePost.Unlock()

	return m.calls.ClustersClusterIdBrokersdeletePost
}

// Reset resets the calls made to the mocked methods.
func (m *BrokerApi) Reset() {
	m.lockClustersClusterIdBrokersdeletePost.Lock()
	m.calls.ClustersClusterIdBrokersdeletePost = nil
	m.lockClustersClusterIdBrokersdeletePost.Unlock()
}
